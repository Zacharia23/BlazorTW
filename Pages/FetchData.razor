@page "/fetchdata"

<PageTitle>Weather Forecast </PageTitle>

@using ExampleApp.Data
@inject WeatherForecastService ForecastService

<h1 class="text-2xl font-medium text-gray-500">Weather Forecast </h1>

<p class="text-sm font-medium text-gray-400"> This component demonstrates fetching data from a service. </p>

@if (forecasts == null) {
    <p class="text-sm font-medium text-red-500"><em>Loading....</em></p>
}
else {
    <div>
            <table class="min-w-full divide-y divide-gray-300">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-200 bg-white">
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td class="whitespace-nowrap py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6">@forecast.Date.ToShortDateString()</td>
                    <td class="whitespace-nowrap px-2 py-3.5 text-left text-sm font-semibold text-gray-900">@forecast.TemperatureC</td>
                    <td class="whitespace-nowrap px-2 py-3.5 text-left text-sm font-semibold text-gray-900">@forecast.TemperatureF</td>
                    <td class="whitespace-nowrap px-2 py-3.5 text-left text-sm font-semibold text-gray-900">@forecast.Summary</td>
                </tr>
                
            }
            </tbody>
        </table>
        
    </div>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync() {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}